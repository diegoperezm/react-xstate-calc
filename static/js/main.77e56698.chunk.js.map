{"version":3,"sources":["components/Keypad.js","components/Display.js","logic/calculate.js","components/CalculatorMachine.js","App.js","serviceWorker.js","index.js"],"names":["Keypad","send","type","data","map","ele","style","key","className","id","onClick","Display","value","operand1","operand2","formattedData","elem","length","toString","calculate","ctx","join","operator","calcMachine","Machine","context","result","initial","states","A","RESULT","onEntry","assign","evt","on","target","actions","concat","minus","ce","START","dot","zero","number","OPERAND1","ZERO","BEFOREDECIMALPOINT","AFTERDECIMALPOINT","NEGSTART","OPERATORENTERED","pop","NEGOPERATOR","OPERAND2","equals","Calculator","useMachine","state","useState","setValue","useEffect","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.77e56698.chunk.js","sourcesContent":["import React  from 'react';\n\nfunction Keypad  ({send})  {\n    const  ids =\n    [\n\t[ \"seven\",     7,  {type: \"number\",   data: 7}],\n        [ \"eight\",     8,  {type: \"number\",   data: 8}],\n        [ \"nine\" ,     9,  {type: \"number\",   data: 9}],\n        [ \"multiply\", \"X\", {type: \"operator\", data:\"*\"}],\n        [ \"add\",      \"+\", {type: \"operator\", data:\"+\"}],\n       \t[ \"four\",      4,  {type: \"number\",   data: 4}],\n        [ \"five\",      5,  {type: \"number\",   data: 5}],\n        [ \"six\",       6,  {type: \"number\",   data: 6}],\n        [ \"divide\",   \"/\", {type: \"operator\", data: \"/\"}],\n        [ \"subtract\", \"-\", {type: \"minus\" ,   data:\"-\"}],\n       \t[ \"one\",       1,  {type: \"number\",   data: 1}],\n        [ \"two\",       2,  {type: \"number\",   data: 2}],\n        [ \"three\",     3,  {type: \"number\",   data: 3}],\n        [ \"zero\",      0,  {type: \"zero\",     data: 0}],\n        [ \"decimal\",  \".\", {type: \"dot\",      data:\".\"}],\n       \t[\"equals\",    \"=\", {type: \"equals\",   data: \"=\"}],\n        [\"ce\",        \"ce\", {type: \"ce\"}]\n    ];\n\n\n    let buttons = ids.map( ele  =>  {\n\tlet style = (ele[0] === \"equals\")\n\t    ? \"keypad__key  keypad__key--big\"\n\t    : \"keypad__key\";\n\n\t  return  <button\n               \tkey={`${ele[0]}-id` }\n              \tclassName={style}\n                id={ele[0]}\n\t        onClick = {() => send( ele[2])}\n\t      >\n\t    {ele[1]}\n\t   </button>;\n    });\n\n    return buttons;\n};\n\n\n\nexport default Keypad;\n","import React  from 'react';\n\n\nfunction Display({value, operand1, operand2}) {\n let formattedData = value.map(elem => (elem === \"*\" ? \"X\" : elem));\n let style = \"display display__number\";\n   \n    if( value.length       > 10 ||\n\toperand1.length > 10 ||\n\toperand2.length > 10 ||  \n\tvalue[0].toString().length > 10 \n    ) {\n           style = \"display  display__number--small\"; \n   }\n\n  return (\n       <p className={style} id=\"display\">\n\t   {formattedData}\n\t</p>); \n}\n\nexport default Display;\n","/**\n * @description                    - Determine the result of the mathematical operations\n * @param   {object}          ctx  - Extended  state of the statechart\n * @returns {{number|string}}      - The result of the mathematical operations or error message\n *\n */\nfunction calculate(ctx) {\n  let operand1 = ctx.operand1.join(\"\");\n  let operator = ctx.operator.join(\"\");\n  let operand2 = ctx.operand2.join(\"\");\n\n  switch (operator) {\n    case \"+\":\n      return +operand1 + +operand2;\n    case \"-\":\n      return +operand1 - +operand2;\n    case \"/\":\n      return +operand1 / +operand2;\n    case \"*\":\n      return +operand1 * +operand2;\n\n    default:\n      return \"error\";\n  }\n}\n\n\nexport default calculate;\n","import React, {useState, useEffect}  from 'react';\nimport { useMachine } from '@xstate/react';\nimport { Machine,  assign  } from 'xstate';\nimport Keypad   from './Keypad';\nimport Display   from  './Display';\nimport calculate from '../logic/calculate.js';\n\nconst calcMachine = Machine(\n  {\n    id: \"calculatorID\",\n    context: {\n      data: [],\n      result: \"\",\n      operand1: [],\n      operator: [],\n      operand2: []\n    },\n    initial: \"A\",\n    states: {\n      A: {\n        initial: \"START\",\n        states: {\n          RESULT: {\n            id: \"resultID\",\n            onEntry: [\n\t\tassign({ result: (ctx, evt) =>  calculate(ctx)}),\n              assign({ operand1: (ctx, evt) => [ctx.result] }),\n              assign({ operator: (ctx, evt) => [] }),\n              assign({ operand2: (ctx, evt) => [] }),\n              assign({ data: (ctx, evt) => [ctx.operand1] })\n            ],\n            on: {\n              operator: {\n                target: \"#operatorEnteredID\",\n                actions: [\n                  assign({ data: (ctx, evt) => ctx.data.concat(evt.data) }),\n                  assign({\n                    operator: (ctx, evt) => ctx.operator.concat(evt.data)\n                  }),\n                ]\n              },\n              minus: {\n                target: \"#operatorEnteredID\",\n                actions: [\n                  assign({ data: (ctx, evt) => ctx.data.concat(evt.data) }),\n                  assign({\n                    operator: (ctx, evt) => ctx.operator.concat(evt.data)\n                  }),\n                ]\n              },\n              ce: {\n                target: \"#startID\",\n                actions: [\n                  assign({ data: (ctx, evt) => [] }),\n                  assign({ operand1: (ctx, evt) => [] }),\n                ]\n              }\n            }\n          },\n          START: {\n            id: \"startID\",\n            onEntry: [\n              assign({ data: (ctx, evt) => [0] }),\n              assign({ operand1: (ctx, evt) => [0] }),\n            ],\n            on: {\n              dot: {\n                target: \"#operand1ID.AFTERDECIMALPOINT\",\n                actions: [\n                  assign({ data: (ctx, evt) => ctx.data.concat(evt.data) }),\n                  assign({\n                    operand1: (ctx, evt) => ctx.operand1.concat(evt.data)\n                  }),\n                ]\n              },\n              zero: {\n                target: \"#operand1ID.ZERO\",\n              },\n              number: {\n                target: \"#operand1ID.BEFOREDECIMALPOINT\",\n                actions: [\n                  assign({ data: (ctx, evt) => [] }),\n                  assign({ operand1: (ctx, evt) => [] }),\n                  assign({ data: (ctx, evt) => ctx.data.concat(evt.data) }),\n                  assign({\n                    operand1: (ctx, evt) => ctx.operand1.concat(evt.data)\n                  }),\n                ]\n              },\n              minus: {\n                target: \"#NEG1ID\",\n                actions: [\n                  assign({ data: (ctx, evt) => [] }),\n                  assign({ operand1: (ctx, evt) => [] }),\n                  assign({ data: (ctx, evt) => ctx.data.concat(evt.data) }),\n                  assign({\n                    operand1: (ctx, evt) => ctx.operand1.concat(evt.data)\n                  }),\n                ]\n              },\n              ce: {\n                target: \"#startID\",\n                actions: [\n                  assign({ data: (ctx, evt) => [0] }),\n                  assign({ operand1: (ctx, evt) => [0] }),\n                ]\n              }\n            }\n          }\n        }\n      },\n      OPERAND1: {\n        id: \"operand1ID\",\n        on: {\n          ce: {\n            target: \"#startID\",\n            actions: [\n              assign({ data: (ctx, evt) => [] }),\n              assign({ operand1: (ctx, evt) => [] }),\n              assign({ operator: (ctx, evt) => [] }),\n              assign({ operand2: (ctx, evt) => [] }),\n            ]\n          },\n          operator: {\n            target: \"#operatorEnteredID\",\n            actions: [\n              assign({ data: (ctx, evt) => ctx.data.concat(evt.data) }),\n              assign({ operator: (ctx, evt) => ctx.operator.concat(evt.data) }),\n            ]\n          },\n          minus: {\n            target: \"#operatorEnteredID\",\n            actions: [\n              assign({ data: (ctx, evt) => ctx.data.concat(evt.data) }),\n              assign({ operator: (ctx, evt) => ctx.operator.concat(evt.data) }),\n            ]\n          }\n        },\n        states: {\n          ZERO: {\n            on: {\n              number: {\n                target: \"BEFOREDECIMALPOINT\",\n                actions: [\n                  assign({ data: (ctx, evt) => ctx.data.concat(evt.data) }),\n                  assign({\n                    operand1: (ctx, evt) => ctx.operand1.concat(evt.data)\n                  }),\n                ]\n              },\n              dot: {\n                target: \"AFTERDECIMALPOINT\",\n                actions: [\n                  assign({ data: (ctx, evt) => ctx.data.concat(evt.data) }),\n                  assign({\n                    operand1: (ctx, evt) => ctx.operand1.concat(evt.data)\n                  }),\n                ]\n              }\n            }\n          },\n          BEFOREDECIMALPOINT: {\n            on: {\n              number: {\n                target: \"BEFOREDECIMALPOINT\",\n                actions: [\n                  assign({ data: (ctx, evt) => ctx.data.concat(evt.data) }),\n                  assign({\n                    operand1: (ctx, evt) => ctx.operand1.concat(evt.data)\n                  }),\n                ]\n              },\n              zero: {\n                target: \"BEFOREDECIMALPOINT\",\n                actions: [\n                  assign({ data: (ctx, evt) => ctx.data.concat(evt.data) }),\n                  assign({\n                    operand1: (ctx, evt) => ctx.operand1.concat(evt.data)\n                  }),\n                ]\n              },\n              dot: {\n                target: \"AFTERDECIMALPOINT\",\n                actions: [\n                  assign({ data: (ctx, evt) => ctx.data.concat(evt.data) }),\n                  assign({\n                    operand1: (ctx, evt) => ctx.operand1.concat(evt.data)\n                  }),\n                ]\n              }\n            }\n          },\n          AFTERDECIMALPOINT: {\n            on: {\n              number: {\n                target: \"AFTERDECIMALPOINT\",\n                actions: [\n                  assign({ data: (ctx, evt) => ctx.data.concat(evt.data) }),\n                  assign({\n                    operand1: (ctx, evt) => ctx.operand1.concat(evt.data)\n                  }),\n                ]\n              },\n              zero: {\n                target: \"BEFOREDECIMALPOINT\",\n                actions: [\n                  assign({ data: (ctx, evt) => ctx.data.concat(evt.data) }),\n                  assign({\n                    operand1: (ctx, evt) => ctx.operand1.concat(evt.data)\n                  }),\n                ]\n              }\n            }\n          }\n        }\n      },\n      NEGSTART: {\n        id: \"NEG1ID\",\n        on: {\n          number: {\n            target: \"#operand1ID.BEFOREDECIMALPOINT\",\n            actions: [\n              assign({ data: (ctx, evt) => ctx.data.concat(evt.data) }),\n              assign({ operand1: (ctx, evt) => ctx.operand1.concat(evt.data) }),\n            ]\n          },\n          zero: {\n            target: \"#operand1ID.ZERO\",\n            actions: [\n              assign({ data: (ctx, evt) => ctx.data.concat(evt.data) }),\n              assign({ operand1: (ctx, evt) => ctx.operand1.concat(evt.data) }),\n            ]\n          },\n          dot: {\n            target: \"#operand1ID.AFTERDECIMALPOINT\",\n            actions: [\n              assign({ data: (ctx, evt) => ctx.data.concat(evt.data) }),\n              assign({ operand1: (ctx, evt) => ctx.operand1.concat(evt.data) }),\n            ]\n          },\n          ce: {\n            target: \"#startID\",\n            actions: [\n              assign({ data: (ctx, evt) => [] }),\n              assign({ operand1: (ctx, evt) => [] }),\n              assign({ operator: (ctx, evt) => [] }),\n              assign({ operand2: (ctx, evt) => [] }),\n            ]\n          }\n        }\n      },\n      OPERATORENTERED: {\n        id: \"operatorEnteredID\",\n        on: {\n          ce: {\n            target: \"#startID\",\n            actions: [\n              assign({ data: (ctx, evt) => [] }),\n              assign({ operand1: (ctx, evt) => [] }),\n              assign({ operator: (ctx, evt) => [] }),\n              assign({ operand2: (ctx, evt) => [] }),\n            ]\n          },\n          zero: {\n            target: \"#operand2ID.ZERO\",\n            actions: [\n              assign({ data: (ctx, evt) => ctx.data.concat(evt.data) }),\n              assign({ operand2: (ctx, evt) => ctx.operand2.concat(evt.data) }),\n            ]\n          },\n          number: {\n            target: \"#operand2ID.BEFOREDECIMALPOINT\",\n            actions: [\n              assign({ data: (ctx, evt) => ctx.data.concat(evt.data) }),\n              assign({ operand2: (ctx, evt) => ctx.operand2.concat(evt.data) }),\n            ]\n          },\n          operator: {\n            target: \"OPERATORENTERED\",\n            actions: [\n              assign({\n                data: (ctx, evt) => {\n                  let dataPop = ctx.data.pop();\n                  return ctx.data.concat(evt.data);\n                }\n              }),\n              assign({\n                operator: (ctx, evt) => {\n                  let dataPop = ctx.operator.pop();\n                  return ctx.operator.concat(evt.data);\n                }\n              }),\n            ]\n          },\n          minus: {\n            target: \"#NEG2ID\",\n            actions: [\n              assign({ data: (ctx, evt) => ctx.data.concat(evt.data) }),\n              assign({ operand2: (ctx, evt) => ctx.operand2.concat(evt.data) }),\n            ]\n          }\n        }\n      },\n      NEGOPERATOR: {\n        id: \"NEG2ID\",\n        on: {\n          number: {\n            target: \"#operand2ID.BEFOREDECIMALPOINT\",\n            actions: [\n              assign({ data: (ctx, evt) => ctx.data.concat(evt.data) }),\n              assign({ operand2: (ctx, evt) => ctx.operand2.concat(evt.data) }),\n            ]\n          },\n          zero: {\n            target: \"#operand2ID.ZERO\",\n            actions: [\n              assign({ data: (ctx, evt) => ctx.data.concat(evt.data) }),\n              assign({ operand2: (ctx, evt) => ctx.operand2.concat(evt.data) }),\n            ]\n          },\n          dot: {\n            target: \"#operand2ID.AFTERDECIMALPOINT\",\n            actions: [\n              assign({ data: (ctx, evt) => ctx.data.concat(evt.data) }),\n              assign({ operand2: (ctx, evt) => ctx.operand2.concat(evt.data) }),\n            ]\n          },\n          ce: {\n            target: \"#startID\",\n            actions: [\n              assign({ data: (ctx, evt) => [] }),\n              assign({ operand1: (ctx, evt) => [] }),\n              assign({ operator: (ctx, evt) => [] }),\n              assign({ operand2: (ctx, evt) => [] }),\n            ]\n          }\n        }\n      },\n      OPERAND2: {\n        id: \"operand2ID\",\n        on: {\n          ce: {\n            target: \"#startID\",\n            actions: [\n              assign({ data: (ctx, evt) => [] }),\n              assign({ operand1: (ctx, evt) => [] }),\n              assign({ operator: (ctx, evt) => [] }),\n              assign({ operand2: (ctx, evt) => [] }),\n            ]\n          },\n          operator: {\n            target: \"#operatorEnteredID\",\n            actions: [\n\t\tassign({ result: (ctx, evt) =>  calculate(ctx) }),\n              assign({ operand1: (ctx, evt) => [ctx.result] }),\n              assign({ operand2: (ctx, evt) => [] }),\n              assign({ data: (ctx, evt) => [ctx.operand1, evt.data] }),\n              assign({ operator: (ctx, evt) => [evt.data] }),\n            ]\n          },\n          minus: {\n            target: \"#operatorEnteredID\",\n            actions: [\n\t\tassign({ result: (ctx, evt) =>  calculate(ctx) }),\n              assign({ operand1: (ctx, evt) => [ctx.result] }),\n              assign({ operand2: (ctx, evt) => [] }),\n              assign({ data: (ctx, evt) => [ctx.operand1, evt.data] }),\n              assign({ operator: (ctx, evt) => [evt.data] }),\n\n            ]\n          },\n          equals: {\n            target: \"#resultID\"\n          }\n        },\n        states: {\n          ZERO: {\n            on: {\n              number: {\n                target: \"BEFOREDECIMALPOINT\",\n                actions: [\n                  assign({ data: (ctx, evt) => ctx.data.concat(evt.data) }),\n                  assign({\n                    operand2: (ctx, evt) => ctx.operand2.concat(evt.data)\n                  }),\n                ]\n              },\n              dot: {\n                target: \"AFTERDECIMALPOINT\",\n                actions: [\n                  assign({ data: (ctx, evt) => ctx.data.concat(evt.data) }),\n                  assign({\n                    operand2: (ctx, evt) => ctx.operand2.concat(evt.data)\n                  }),\n                ]\n              }\n            }\n          },\n          BEFOREDECIMALPOINT: {\n            on: {\n              number: {\n                target: \"BEFOREDECIMALPOINT\",\n                actions: [\n                  assign({ data: (ctx, evt) => ctx.data.concat(evt.data) }),\n                  assign({\n                    operand2: (ctx, evt) => ctx.operand2.concat(evt.data)\n                  }),\n                ]\n              },\n              zero: {\n                target: \"BEFOREDECIMALPOINT\",\n                actions: [\n                  assign({ data: (ctx, evt) => ctx.data.concat(evt.data) }),\n                  assign({\n                    operand2: (ctx, evt) => ctx.operand2.concat(evt.data)\n                  }),\n                ]\n              },\n              dot: {\n                target: \"AFTERDECIMALPOINT\",\n                actions: [\n                  assign({ data: (ctx, evt) => ctx.data.concat(evt.data) }),\n                  assign({\n                    operand2: (ctx, evt) => ctx.operand2.concat(evt.data)\n                  }),\n                ]\n              }\n            }\n          },\n          AFTERDECIMALPOINT: {\n            on: {\n              number: {\n                target: \"AFTERDECIMALPOINT\",\n                actions: [\n                  assign({ data: (ctx, evt) => ctx.data.concat(evt.data) }),\n                  assign({\n                    operand2: (ctx, evt) => ctx.operand2.concat(evt.data)\n                  }),\n                ]\n              },\n              zero: {\n                target: \"BEFOREDECIMALPOINT\",\n                actions: [\n                  assign({ data: (ctx, evt) => ctx.data.concat(evt.data) }),\n                  assign({\n                    operand2: (ctx, evt) => ctx.operand2.concat(evt.data)\n                  }),\n                ]\n              }\n            }\n          }\n        }\n      }\n    }\n  });\n\n\n\nfunction Calculator() {\n    const [state, send] = useMachine(calcMachine);\n    const [value, setValue] =  useState(state.context.data);\n\n    useEffect(() => {\n\tsetValue(state.context.data);\n    }, [state.context.data]);\n\n    return (\n <div className=\"App\">\n   <h1 className=\"title\">Calculator</h1>\n   <div className=\"container\">\n     <Display\n\tvalue={value}\n \toperand1={state.context.operand1}\n \toperand2={state.context.operand2}\n      />\n     <div className=\"keypad\">\n      <Keypad send={send} />\n     </div>\n   </div>\n </div>\n    );\n}\n\n\n\n\nexport default Calculator;\n\n","import React           from 'react';\nimport Calculator   from './components/CalculatorMachine';\nimport './App.css';\n\nfunction App() {\n    return   (<Calculator  />)   ;\n}\n\nexport default App;\n\n\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}